1.使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能
2.写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息 , 分析上述不同 value 大小下，平均每个 key 的占用内存空间

---

127.0.0.1:6379> info memory
# Memory
used_memory:1164880
used_memory_human:1.11M
used_memory_rss:6696960
used_memory_rss_human:6.39M
used_memory_peak:5299168
used_memory_peak_human:5.05M
used_memory_peak_perc:21.98%
used_memory_overhead:1043104
used_memory_startup:1025472
used_memory_dataset:121776
used_memory_dataset_perc:87.35%
allocator_allocated:1099280
allocator_active:6659072
allocator_resident:6659072
total_system_memory:34359738368
total_system_memory_human:32.00G
used_memory_lua:37888
used_memory_lua_human:37.00K
used_memory_scripts:0
used_memory_scripts_human:0B
number_of_cached_scripts:0
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
allocator_frag_ratio:6.06
allocator_frag_bytes:5559792
allocator_rss_ratio:1.00
allocator_rss_bytes:0
rss_overhead_ratio:1.01
rss_overhead_bytes:37888
mem_fragmentation_ratio:6.09
mem_fragmentation_bytes:5597680
mem_not_counted_for_evict:0
mem_replication_backlog:0
mem_clients_slaves:0
mem_clients_normal:17440
mem_aof_buffer:0
mem_allocator:libc
active_defrag_running:0
lazyfree_pending_objects:0
lazyfreed_objects:0